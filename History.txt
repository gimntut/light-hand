.LOG
20:02 29.09.2004
Я возвращаюсь к написанию программы "Расписание - Легкая рука"
Пока что пытаюсь вспомнить принципы работы программы, и исправляю наиболее крупные ошибки. О результатах - позже.
23:45 29.09.2004
Первая победа. Исправлена ошибка создания нового класса.
12:10 30.09.2004
С 9:00 я пытаюсь привести часть программы к ООП. Полный провал. Не зря я начинал писать эту программу с нуля. Начинаю вторую попытку, но без ООП.
2:46 01.10.2004
Исправил все яркие ошибки. Внедрил помощь по исправлению ошибок. Заменил класические чекбоксы на декоративные. На данный момент задача следующая: нужно добится, чтобы количество уроков в неделю обновлялось при изменении.
23:21 01.10.2004
Около 2-х часов дня были исправленны ошибки связанные с выводом справки.
Обнаружена ошибка при дублировании классов.
0:59 02.10.2004
Создание дубликатов проходит отлично.
Исправил перемешивание классов в списке.

2:28 02.10.2004
Дублирование названий не сопровождается дублированием предметов в классах.
Завтра (т.е. сегодня) рано вставать, ложусь спать.

13:25 03.10.2004
Пришлось отказаться от начального варианта дублирования классов (через EditCaption). Начал делать через диалоговое окно, работы предстоит много - слишком навороченый диалог.

12:44 08.10.2004
Для создания дубликата требуются ООПэшные механизмы (хотя могбы обойтись без них). Поэтому плутаю в том что давно натворил, но что с тех пор ещё и не работало.

13:31 08.10.2004
Перевёл хранение всех данных Subj. Пропали списки с экрана.

22:25 08.10.2004
Программу окончательно убил. Несколько дней работать не будет. Создаю новый модуль расписания с минимумом кода и жесткой, но удобной структурой. Что выйдет посмотрим.

15:35 10.10.2004
Структура сформированна на 90% процентов. Весь модуль утыкан коментариями.
Код содержит tTimeTableX - упоминание преподавателя, кабинета, класса в расписании; и tPlainSubjects - список предметов в котором упоминается данный учитель, кабинет или класс.
Сижу с утра до вечера, скорость маленькая. Может оно и к лучшему исправления вносятся уже сейчас, а не потом. Трудно писать и не видеть результата собственного труда.

13:27 11.10.2004
Сижу с 10 утра.
Сделал списки в виде коллекций, что сильно сократило код.
Описал все типы кроме tSubject, tSubjects, tTimeTable.
Скоро увижу первые результаты.

9:47 31.01.04
Я вернулся. Тяжело!

21:47 31.01.04
Страно, но буквально за пол-часа, закончил описывать tSubject.
Осталось tSubjects и tTimeTable.

23:25 31.01.04
Ложусь спать. Наполовину закончил tSubjects. Завтра к вечеру должен закончить остальное.

21:42 01.02.2004
Борьба с Pentium1 отняла много времени результат почти ни какой.

12:05 02.02.04
Пишу на обум. Взаимосвязь между объектами начинает отходить от первоначального плана, который я уже не помню. Но это только в лучшую строну.

17:24 17.02.2005
Неделю назад перебрался в коттедж. Начал писать компоненты. Сначала было очень тяжело, в субботу стало по-легче. Для работы не хватает принтера. Воскресенье был выходной, понедельник и вторник (14-16) прийти не смог. Сегодня много народу. На данный момент имею три компоненты SubSource, SubjGrid, SubjList. Кроме того, имеется класс TDataLink используемый для взаимодействия  3х компанентов. Основы взаимодействия ещё не описаны, поэтому ещё нельзя посмотреть на программу в действии, но уже достаточно близко. Сегодня провёл первое испытание на взаимодействие - всё отлично.

18:55 18.02.2005
Описал все методы SubjList и SubjGrid (необходимый минимум). Не запускается. Ошибка при загрузке начальных ресурсов.

17:37 20.02.2005
У меня было 20 минут на то, чтобы посидеть за компьютером. Удивительно, но то что вчера казалось не разрешимой проблемой решилось за 10 минут. Не хватало одной строчки, запрещающей использовать не инициализированый SubSource.

19:07 21.02.2005
Настроил в SubjGrid всё что касается вывода информации. Также вынес в свойства для инспектора WeekDays и Lessons. Теперь можно настраивать внешний вид сетки ещё до запуска программы.

08:34 03.03.05 История прошлых дней.
22 февраля - вторник
Был во 2ой школе, в гимназии. Лечил компьютер от вирусов. Занимался с Ильмиром.
23/02 С Гульназ были в коттедже. С утра лечил от вирусов. Занимался с Ильмиром.
Дописал всё взаимодействие в модуле Rasp. Рисовал человечков.
24/02 Был во 2ой школе. Агитировал школьников. Встречался с Денисом.
Исправил показ человечков в SubjList.
25/02 Создал формы для создания учителей, кабинетов, предметов.
26/02 Полчаса в коттедже. Изменил диалог создания нового предмета.
27/02 В коттедже с утра до 17:30. Написал сохранение и чтение расписания.
28/02 Понедельник. Написал всё, что касается добавление класса в список.
1/03 Активизировал диалоги TeacherDlg, KabinetDlg. Для этого пришлось во все объекты внести  метод Assign. Сумашедший труд.
2/03 Исправил ошибку связаную с уничтожением данных. При закрытиии
программы происходила ошибка, т.к. вместо SubjectX1.Assign(SubjectX2), было написано SubjectX1:=SubjectX2. Как следствие, один экземпляр объекта оставался в памяти, а второй уничтожался 2 раза. Кроме того, исправлены ошибки в оформлении SubjGrig.

09:23 03.03.05
Сегодня до меня дошёл принцип наименьшего шанса. Для начала, то что знал давно. У каждого предмета есть шанс быть поставленным в расписание. При помещении любого предмета в расписание, шансы других предметов уменьшаются. Если шанс какого-то предмета стал равным нулю, то можно считать, что расписание составить не удалось. Оптимальным вариантом является помещение в расписание предмета с наименьшим шансом. Таким образом он успеет попасть в расписание до исчерпания шанса. Остаётся определить шанс предмета. Вот тут был туман и не ясность. Но вроде прояснилось. И вот, что получилось. Шансом для пустого расписания называется количество оставшихся не занятыми клеток в классе, при всех (оптимально) раставленных предметах во всех остальных классах. Для частично заполненого расписания, учёт ведётся в соответствии с заполнеными клетками.

22:21 03.03.05
В 9 утра начал активировать диалог создания нового предмета. Для этого пришлось к потомкам класса TCollection добавить функцию AddNewItem которая добавляет и возвращает пустой элемент коллекции. Взаимодействие между диалогом и tSubjSource организовано посредством событий диалога onChange, onInsert, onDelete. Для организации списков в диалоге используется событие onGetList. В диалог напрямую передаётся список названий предметов SubjNames. В пробный файл заложен список предметов и баллов по СанПИН. Из диалога удалён компанент (StringGrid) списка Преподаватель-Кабинет. Соответсвующий компанент будет создан отдельно.

15:47 04.03.05
С 8 утра без остановки делал Edit содержащий скрытый список. При попытке написать слово он выдаёт слова начинающиеся на написаные буквы. На выбор предлагается не более 2х слов. Одно сверху, одно снизу. Стрелками вверх/вниз можно выбирать нужное слово. Много времени ушло на то, чтобы убрать два лишних едита в режиме дизайна. От них не было бы большого вреда, если бы при загруке программа не пыталась загрузить их характеристи. Т.к. объекты реально не существовали, то это вызывало кретическую ошибку.
15:32 10.03.05
7/03 С утра до 16:00
8/03 Выходной
9/03 С 16:30 до 23:00
10/03 С 10:00

22:54 10.03.05
Вчера и сегодня делал диалог создания нового предмета. Завершил. Попутно исправил сохранение предметов в файл. Хорошо работает создание и показ предметов в соответсвии с текущим классом, преподавателем, кабинетом. Под конец исправил диалоги для изменения существующих предметов, преподавателей, кабинетов. Завтра займусь вызовом одних диалогов из других. Наиболее трудоёмким оказывается создание/изменение/удаление классов, т.к. у них нет диалогов, а возможность изменения должна быть.

19:45 11.03.05
Работу начал в 10 утра. Для начала настроил создание и изменение классов прямо в диалоге создания нового предмета. Настроил вызовы диалогов создания и измения одних объектов из диалогов других. Настроил обновление списков после их изменения. Настроил изменение основного окна при изменении класса. Настроил реакцию SubjList'a на F2. Удаление классов, преподавателей, кабинетов связано с изменением всех относящихся к ним предетам, поэтому потребуются диалоги для выбора режима удаления перечисленных объектов.

07:36 12.03.05
Приступаю к новому дню работ. Задача настроить обмен объектов клавишами Ctrl+вверх/вниз.

09:32 12.03.05
Поставленная задача выполнена. Кроме того улучшил диалог создания кабинета. Теперь нельзя поставить номер кабинета, назначеный другому кабинету.

13:49 12.03.05
При проверке выяснялось, что перемена предметов, не даёт нужного результата, т.к. на экране отображается содержимое списка SubjectX, не связаного с Subjects в котором и происходит изменение порядка. Последие 4 часа были посвячены созданию связи между этими 2мя объектами. Обмен предметами проходит как положено, но в при выделении отдельных строк списка происходит торможение. Предстоит большой объём по изменению вертикали объектов.

02:16 16.03.05
13/03 работал до 4х ночи. Что сделал не помню.
14/02 работал до 2х ночи. Создал модуль ведения логов. Благодаря чему была устранена утечка памяти.
Кроме того внёс все данные по школе №2.
15/02 заканчиваю работу. Начал около 16 часов. Добавил в диалог список аналогичный SubjList. Эффект потрясающий. Список вносит данные во все поля диалога щелщками мыши, но самое интересное - управляет выходом из диалога. Завтра собираюсь настроить список на нажатие клавиш Ins, Del, F2.

00:03 18.03.05
Изменил SubjGrid так, что цвета стали отдельным объектом. Теперь SubjGrid несёт много графической информации. Подбор цветов занимает массу времени, т.к. неправильные цвета ухудшают восприятие текстовой информации. Теперь когда внесение данных в сетку расписание проверено, можно создать необходимые диалоги, которые необходимы для устранения пересечений. В сетке нужно показать заблокированные уроки и пересекающиеся дни недели.

15:20 21.03.05
В ночь с 19 на 20 (с 21:40 до 2:30) внедрил в SubjGrid две кнопки "Содержимое таблицы" и "Не полный обзор". Сделал показ занятых дней недели для текущего предмета. Сделал показ нескольких строк в одной клетке таблицы. Утром 20го до 9:30 сделал блокирование уроков для классов, учителей, кабинетов. 

------------------------------------------------
16:22 02.01.2006
Сегодня вернулся к написанию программы Школьное расписание. Аж сердце защимило. Для начала добился нормальной компиляции, а потом посмотрим.

16:42 02.01.2006
Обнаружена нестыковка TNewGrid c программой расписание:
несоответвие числа столбцов и элементов Column:TNGColumn

22:22 02.01.2006
Исправил ошибку в TNewGrid.
Исправил двойной вывод кабинета в расписании.

8:30 13.01.2006
Доработал компонент TSubjComands который обеспечивает управление расписанием через Actions и ImageList. Аналогичные возможности были убраны из TSubjSource. Исправлены ошибки при использовании нескольких TSubjSource  в проекте. Устранены утечки памяти. Исправлено несоответствие значков в SubjGrid.

22:10 15.01.2006
Вчера было добавлены Actions в TSubjCommands: Блокировать клетку, Блокировать день, Неполный просмотр, Скрыть текст, Скрыть СанПИН. Переименовал TSubjCommands в TSubjCmds. 
Только что придумал, как можно сделать СанПИН на неделю.

2:18 16.01.2006
Теперь недельный СанПИН показывается под названием класса в виде прямоугольничков. Теперь моя задача добиться правильного показа блокировки и показ пересечений для предмета в сетке.

17:25 17.01.2006
Вчера вечером доделал показ символов блокировки, а также показ пересечений для предмета выбраного в сетке для режима ccmKlass.
Теперь мне пришло в голову, что не плохо было бы создать компонент TSubjPlugSupport, который позволил бы использовать для анализа расписания различные дополнения, вроде автоматичесеого заполнения расписания и составления тарификации.
Но самым важным дополнением должен стать модуль прямой помощи. С помощью которого, пользователи смогут составлять расписания на компьютерах друг друга и при этом общаться (обмениваться текстовыми сообщениями).

0:02 18.01.2006
Переименовал TDataLink и TDataLinks в TSubjLink и TSubjLinks, соотвествено.
Оптимизировал текст для TSubjLink.SubjEvent.
Немного оптимизировал 

3:59 20.01.2006
Сейчас провёл первые испытания для работы с плугином. На форме лежит компонент SubjPluginSupport связаный с расписанием.
У него есть метод, который обращается к библиотеке-длл на диске, получает от неё класс основаный на TSubjCustomPlugin. На основе полученого класса создаётся экземпляр. Потом вызывается метод экземпляра, который должен проделать некую работу.
Пробные испытания прошли более чем успешно. Все методы класса в длл должны быть идентичны методам TSubjCustomPlugin, лишнее методы будут недоступны. Нужно подумать какие методы необходимы для дальнейшей работы.

-------------
6:57 12.09.2006
Возвращаюсь к программе расписания.
Задача на ближайшее время: определить фронт работ.
Замечение к 20/01/2006: Для более качественной и лёгкой работы необходимо перевести всю программу к Com-модели.
Наиболее важной на данный момент мне кажется функция перестовки строк в расписании (золотая функция).

1:03 13.09.2006
Сделал автоматическую загрузку и сохранения расписания, для увеличения скорости отладки.
Изменил цветовое решение сетки таблицы. Теперь каждая клетка имеет градиентную заливку.

7:25 13.09.2006
Есть мысль создать подробный просмотр информации, аналогичный существуещему в CharMap.
Это будет симпатишное окошко которое будет поверх активной клетки  и подробно расписывать содержимое этой клетки.
Появление по Циф+, исчезновение Циф-. 

18:58 13.09.2006
Сделал симпатишное окошко. Пока без текста. Но полностью соответствует текущей световой схеме.
Подправил градиент клеток так, что смотрится одинаково хорошо как для тёмных цветов, так и для светлых цветов основного фона сетки.

0:32 14.09.2006
Сделал частичное сохранение расписания в виде текстового файла.
Задача на завтра:
 1. Доделать сохранение в виде текста
 2. Сделать считывание из тестового файла
 3. Изменить чтение/сохранение бинарного файла, так чтобы изменеие структуры данных не влияло на формат файла.

22:48 18.09.2006
Запись/чтение в/из текстового файла выполнено.
Переформатирую модуль AllRasp2. Раставил по порядку все методы до классов TKlasses включительно.

6:30 19.09.2006
AllRasp2 переформатирован полностью. Учитывая, что длина модуля состовляет 2500 строк, и ещё добавятся комментарии, то анализ такого текст по распечатке - большой труд. Сейчас это сделать значительно легкче, т.к. Методы в интерфейсной части расположены по алфавиту, а описательная часть идентична интерфейсной.

6:36 19.09.2006
Перехожу к переформатированию модуля Rasp, его длина, на данный момент, составляет 3600 строк.

7:30 19.09.2006
Закончил переформатирование модуля Rasp.

7:26 20.09.2006
Разделить информацию о школе (Klasses) от расписания (TimeTable).
Хранить информацию о состоянии текущей клетки в самой клетке, а не вычислять (?)
  В клетке должен храниться список предметов, которые можно поставить в текущую клетку.
Предусмотреть наличие нескольких расписаний.

7:27 21.09.2006
Вывод сетки расписания явно нуждается в оптимизации. На текущий момент предопределёные цвета и размеры клеток учитываются лишь в TSubjGrid.InitMainLayer.

23:38 21.09.2006
Сегодня читал руководство пользователя к "Ника-Колледж", интерфейс программы не очень, но имеется система автоматического составления расписания. Со временем можно будет договориться с создателями программы о написании плугина (дополнения) к моей программе. Ника-колледж имеет хоть и похожую, но отличную от моей структуру данных. Поэтому необходимо предусмотреть в интерфейсах предметов, классов, учителей и кабинетов (а возможно и школы) метод AdditionalParams(Stream:IStream) который будет позволять сохранить дополнительную информацию предоставленую дополнением в одном файле. Если удастся договориться с создателями Ника-Колледж, это будет большой плюс.

17:30 25.09.2006
Выполнил оптимизацию вывода клеток сетки. Разделил модуль Rasp на четыре. Остальные переименовал. 
Теперь все модули начинаются с префикса Sbj:
SbjCmd.pas 	- Actions и Images для управления расписанием и синхронизации интерфейса
SbjColl.pas	- Базовые классы для управления списками в расписании
SbjConsts.pas	- Базовые типы и константы используемые в расписании
SbjGrd.pas	- Сетка расписания
SbjKabDlg.pas	- Диалог создания кабинета
SbjKernel.pas	- Ядро расписания
SbjLst.pas	- Вывод списков
SbjManager.pas	- Управление пересечениями
SbjPlug.pas	- Управление внешними модулями
SbjSrc.pas	- Модуль компонента SubjSource
SbjSubjDlg.pas	- Диалог создания предмета
SbjTeachDlg.pas	- Диалог создания преподавателя

9:45 26.09.2006
Добавлен прототип заполнения фона сетки. Задача: сделать показ символа программы в нижнем правом углу сетки.

7:34 29.09.2006
Прототип рисования символа программы был сделан позавчера. Но имел недостатоки 1) рисовался поверх сетки 2) перемещался под действием скроллинга 3)частично перерисовывался на старом месте. В результате появлялось множество кусочков символики.
Если использовать PaintBox, то проблема будет решена.

22:22 29.09.2006
За 20 минут внедрил PaintBox так, что символ программы не искажается, и всегда в углу. Осталось сделать так, чтобы символика не перекрывала сетку.

23:13 29.09.2006
Слишком много проблем с символикой. Выкидываю её из своей программы.

0:21 30.09.2006
Наконец-то удалось избавиться от лишних линий, возникающих при перемотке. Дело оказалось в изменении размера шаблона клетки при рисовании СанПИН.

22:51 05.10.2006
1. Нужно написать комментарии к программе
2. С этого момента Кабинеты, Преподаватели и Классы будут называться - Примитивы
3. Каждый примитив должен хранить информацию о том, какие предметы связанные с ним храняться в сетке расписания.

0:25 06.10.2006
4. Каждый предмет должен хранить информацию о том кто и где проводит этот предмет для данного урока.
На данный момент написал некоторые комментарии. Переименовал модуль SubjConsts в SubjResource. Переместил в него часть типов из SubjKernel.